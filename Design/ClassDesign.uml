@startuml
' Class Definition
' Architecture
class Singleton
class List

' Inheritance and Interaction Diagram
namespace InputOutput{
    class ShiftRegisterCascade

    class ShiftRegister{
        # inputComponent  : *IShiftRegisterInputComponent
        # outputComponent : *IShiftRegisterOutputComponent
        # int dataPin 
        # int latchPin
        # int clockPin

        + unsigned char* ReadData()
        + void WriteData(char dataToWrite[])

        + void SetLatchPin(int pinLocation)
        + void SetClockPin(int pinLocation)
        + void SetDataPin(int pinLocation)

        + void SetInputComponent(IShiftRegisterInputComponent *inputComponent); 
        + void SetOutputComponent(IShiftRegisterOutputComponent *outputComponent); 
    }

    Interface IShiftRegisterInputComponent{
        {abstract} void WriteData(char dataToWrite[])
    }
    Interface IShiftRegisterOutputComponent{
        {abstract} unsigned char* ReadData()
    }

    class ShiftRegisterInputComponentSerial
    class ShiftRegisterInputComponentParallel
    
    class ShiftRegisterOutputComponentSerial
    class ShiftRegisterOutputComponentParallel

    ShiftRegisterCascade *-- ShiftRegister

    ShiftRegister *-- IShiftRegisterInputComponent
    ShiftRegister *-- IShiftRegisterOutputComponent

    IShiftRegisterInputComponent <|-- ShiftRegisterInputComponentSerial
    IShiftRegisterInputComponent <|-- ShiftRegisterInputComponentParallel

    IShiftRegisterOutputComponent <|-- ShiftRegisterOutputComponentSerial
    IShiftRegisterOutputComponent <|-- ShiftRegisterOutputComponentParallel
@enduml
